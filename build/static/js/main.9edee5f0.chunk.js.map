{"version":3,"sources":["components/spiner/Spiner.js","actions/action-creaters/index.js","actions/action-types/index.js","services/authors-service.js","components/button/Button.js","components/changer/Changer.js","components/author-item/AuthorItem.js","components/author-list/AuthorList.js","components/controllers/Controllers.js","components/app/App.js","reducers/reducer.js","store.js","index.js"],"names":["Spiner","react_default","a","createElement","changeItem","value","type","payload","changeInputValue","AuthorsService","Object","classCallCheck","this","apiBase","_getData","fetch","concat","then","res","json","Button","props","text","clickAction","disabled","onClick","mapDispatchToProps","deleteItem","connect","_ref","inputValue","Fragment","onChange","event","target","button_Button","selectItem","index","selectedIndex","author","changer_Changer","className","AuthorList","authors","map","key","author_item_AuthorItem","clearSelection","moveSelectionUp","moveSelectionDown","isUpDisabled","isDownDisabled","length","isClearDisabled","authorsService","App","_this$props","authorRequested","authorLoaded","getAuthors","data","_this$props2","loading","spiner_Spiner","author_list_AuthorList","controllers_Controllers","Component","newBooks","initialState","actionHandlers","_actionHandlers","defineProperty","state","objectSpread","action","newAuthorsList","toConsumableArray","splice","_newAuthorsList$splic","removedAuthor","slicedToArray","_newAuthorsList$splic3","reducer","arguments","undefined","handler","store","createStore","ReactDOM","render","es","app_App","document","getElementById"],"mappings":"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","file":"static/js/main.9edee5f0.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Spiner() {\n  return (\n    <div>Loading....</div>\n  );\n}\n\nexport default Spiner;\n","import {\n  FETCH_AUTHOR_REQUEST,\n  FETCH_AUTHOR_SUCCESS,\n  SELECT_ITEM,\n  CLEAR_SELECTION,\n  CHANGE_ITEM,\n  DELETE_ITEM,\n  CHANGE_INPUT_VALUE,\n  MOVE_SELECTION_UP,\n  MOVE_SELECTION_DOWN,\n} from '../action-types';\n\nconst authorRequested = () => {\n  return {\n    type: FETCH_AUTHOR_REQUEST\n  }\n};\n\nconst authorLoaded = (newBooks) => {\n  return {\n    type: FETCH_AUTHOR_SUCCESS,\n    payload: newBooks\n  };\n};\n\nconst selectItem = (index, value) => {\n  return {\n    type: SELECT_ITEM,\n    payload: {\n      index,\n      value,\n    },\n  };\n};\n\n\nconst changeItem = (value) => {\n  return {\n    type: CHANGE_ITEM,\n    payload: value,\n  };\n};\nconst changeInputValue = (value) => {\n  return {\n    type: CHANGE_INPUT_VALUE,\n    payload: value,\n  };\n};\n\nconst deleteItem = () => {\n  return {\n    type: DELETE_ITEM,\n  };\n};\n\nconst moveSelectionUp = () => {\n  return {\n    type: MOVE_SELECTION_UP,\n  };\n};\n\nconst moveSelectionDown = () => {\n  return {\n    type: MOVE_SELECTION_DOWN,\n  };\n};\n\nconst clearSelection = () => {\n  return {\n    type: CLEAR_SELECTION,\n  };\n};\n\nexport {\n  authorRequested,\n  authorLoaded,\n  selectItem,\n  clearSelection,\n  moveSelectionUp,\n  moveSelectionDown,\n  changeItem,\n  changeInputValue,\n  deleteItem,\n}\n","const FETCH_AUTHOR_REQUEST = 'FETCH_AUTHOR_REQUEST';\nconst FETCH_AUTHOR_SUCCESS = 'FETCH_AUTHOR_SUCCESS';\nconst SELECT_ITEM = 'SELECT_ITEM';\nconst CHANGE_ITEM = 'CHANGE_ITEM';\nconst DELETE_ITEM = 'DELETE_ITEM';\nconst CHANGE_INPUT_VALUE = 'CHANGE_INPUT_VALUE';\nconst CLEAR_SELECTION = 'CLEAR_SELECTION';\nconst MOVE_SELECTION_UP = 'MOVE_SELECTION_UP';\nconst MOVE_SELECTION_DOWN = 'MOVE_SELECTION_DOWN';\n\nexport {\n  FETCH_AUTHOR_REQUEST,\n  FETCH_AUTHOR_SUCCESS,\n  SELECT_ITEM,\n  CLEAR_SELECTION,\n  CHANGE_ITEM,\n  DELETE_ITEM,\n  CHANGE_INPUT_VALUE,\n  MOVE_SELECTION_UP,\n  MOVE_SELECTION_DOWN\n};\n","export default class AuthorsService {\n  constructor() {\n    this.apiBase = 'http://my-json-server.typicode.com/mate-academy/literary-blog/';\n  }\n\n  getAuthors() {\n    return this._getData('authors');\n  }\n\n  _getData(type) {\n    return fetch(`${this.apiBase}${type}`)\n      .then(res => res.json());\n  }\n}\n","import React from 'react';\n\nfunction Button(props) {\n  const { text , clickAction, disabled} = props;\n  return (\n    <button type=\"button\" onClick={() => clickAction()} disabled={disabled}>{text}</button>\n  );\n}\n\nexport default Button;\n","import React from 'react';\nimport Button from '../button/Button';\nimport { connect } from \"react-redux\";\nimport { changeInputValue, changeItem, deleteItem } from \"../../actions/action-creaters\";\n\nfunction Changer(props) {\n  const {\n    inputValue,\n    changeInputValue,\n    changeItem,\n    deleteItem\n  } = props;\n  return (\n    <>\n      <input type=\"text\" value={inputValue} onChange={(event) => changeInputValue(event.target.value)}/>\n      <Button text={'Change Author'} clickAction={() => changeItem(inputValue)}/>\n      <Button text={'Delete Author'} clickAction={() => deleteItem()}/>\n    </>\n  );\n}\n\nconst mapStateToProps = ({ inputValue }) => {\n  return { inputValue };\n};\n\nconst mapDispatchToProps = {\n  changeInputValue,\n  changeItem,\n  deleteItem,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Changer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { selectItem, changeItem, changeInputValue } from '../../actions/action-creaters';\nimport Changer from '../changer/Changer'\n\nconst AuthorItem = (props) => {\n  const {\n    author,\n    index,\n    selectedIndex,\n    selectItem,\n  } = props;\n  const item = (index === selectedIndex)\n    ? <Changer />\n    : <div className=\"author-item\" onClick={() => selectItem(index, author)}>{author}</div>;\n  return (\n    item\n  );\n};\n\nconst mapStateToProps = ({ selectedIndex, inputValue }) => {\n  return { selectedIndex, inputValue };\n};\n\nconst mapDispatchToProps = {\n  selectItem,\n  changeItem,\n  changeInputValue,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthorItem);\n","import React from 'react';\nimport AuthorItem from '../author-item/AuthorItem'\n\nfunction AuthorList({ authors }) {\n\n  return (\n    <ul>\n      {authors.map((author, index) => {\n        const key = `#${index}`;\n        return (\n          <li key={key}>\n            <AuthorItem author={author} index={index}/>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nexport default AuthorList;\n","import React from 'react';\nimport Button from '../button/Button'\nimport {clearSelection, moveSelectionUp, moveSelectionDown} from \"../../actions/action-creaters\";\nimport {connect} from \"react-redux\";\n\nfunction Controllers(props) {\n  const {\n    selectedIndex,\n    authors,\n    clearSelection,\n    moveSelectionUp,\n    moveSelectionDown,\n  } = props;\n  const isUpDisabled = selectedIndex === null || selectedIndex === 0;\n  const isDownDisabled = selectedIndex === null || selectedIndex === (authors.length - 1);\n  const isClearDisabled = selectedIndex === null;\n  return (\n    <div>\n      <Button text={'Up'} clickAction={() => moveSelectionUp()} disabled={isUpDisabled}/>\n      <Button text={'Down'} clickAction={() => moveSelectionDown()} disabled={isDownDisabled}/>\n      <Button text={'Clear selection'} clickAction={() => clearSelection()} disabled={isClearDisabled}/>\n    </div>\n  );\n}\n\nconst mapStateToProps = ({ selectedIndex, authors}) => {\n  return { selectedIndex, authors };\n};\n\nconst mapDispatchToProps = {\n  clearSelection,\n  moveSelectionUp,\n  moveSelectionDown,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Controllers);\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Spinner from '../spiner/Spiner';\nimport { authorRequested, authorLoaded } from '../../actions/action-creaters';\nimport AuthorsService from '../../services/authors-service';\nimport AuthorList from '../author-list/AuthorList';\nimport Controllers from '../controllers/Controllers'\nconst authorsService = new AuthorsService();\n\nclass App extends Component {\n  componentDidMount() {\n    const {\n      authorRequested,\n      authorLoaded\n    } = this.props;\n\n    authorRequested();\n    authorsService.getAuthors()\n      .then(data => authorLoaded(data));\n  }\n\n  render() {\n    const { authors, loading } = this.props;\n\n    if (loading) {\n      return <Spinner />;\n    }\n\n    return (\n      <>\n        <AuthorList authors={authors}/>\n        <Controllers/>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ authors, loading }) => {\n  return { authors, loading };\n};\n\nconst mapDispatchToProps = {\n  authorRequested,\n  authorLoaded\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {\n  FETCH_AUTHOR_REQUEST,\n  FETCH_AUTHOR_SUCCESS,\n  SELECT_ITEM,\n  CLEAR_SELECTION,\n  CHANGE_ITEM,\n  DELETE_ITEM,\n  CHANGE_INPUT_VALUE,\n  MOVE_SELECTION_UP,\n  MOVE_SELECTION_DOWN\n} from '../actions/action-types';\n\nconst initialState = {\n  authors: [],\n  loading: false,\n  selectedIndex: null,\n  inputValue: '',\n};\n\nconst actionHandlers = {\n  [FETCH_AUTHOR_REQUEST]: (state) => {\n    return {\n      ...state,\n      loading: true\n    };\n  },\n  [FETCH_AUTHOR_SUCCESS]: (state, action) => {\n    return {\n      ...state,\n      authors: action.payload,\n      loading: false\n    };\n  },\n  [SELECT_ITEM]: (state, action) => {\n    return {\n      ...state,\n      selectedIndex: action.payload.index,\n      inputValue: action.payload.value,\n    };\n  },\n  [CLEAR_SELECTION]: (state) => {\n    return {\n      ...state,\n      selectedIndex: null,\n    };\n  },\n  [CHANGE_ITEM]: (state, action) => {\n    const { selectedIndex, authors } = state;\n    const { payload } = action;\n    const newAuthorsList = [...authors];\n    if (payload === '') {\n      newAuthorsList.splice(selectedIndex, 1);\n    } else {\n      newAuthorsList[selectedIndex] = payload;\n    }\n    return {\n      ...state,\n      authors: [...newAuthorsList],\n      selectedIndex: null,\n      inputValue: '',\n    };\n  },\n  [DELETE_ITEM]: (state) => {\n    const { selectedIndex, authors } = state;\n    const newAuthorsList = [...authors];\n    newAuthorsList.splice(selectedIndex, 1);\n    return {\n      ...state,\n      authors: [...newAuthorsList],\n      selectedIndex: null,\n      inputValue: '',\n    };\n  },\n  [CHANGE_INPUT_VALUE]: (state, action) => {\n    return {\n      ...state,\n      inputValue: action.payload\n    };\n  },\n  [MOVE_SELECTION_UP]: (state) => {\n    const { selectedIndex, authors } = state;\n\n    if (selectedIndex === 0) {\n      return state;\n    }\n\n    const newAuthorsList = [...authors];\n    const [removedAuthor] = newAuthorsList.splice(selectedIndex, 1);\n    newAuthorsList.splice(selectedIndex - 1, 0, removedAuthor);\n\n    return {\n      ...state,\n      authors: newAuthorsList,\n      selectedIndex: selectedIndex - 1,\n    };\n  },\n  [MOVE_SELECTION_DOWN]: (state) => {\n    const { selectedIndex, authors } = state;\n\n    if (selectedIndex === authors.length - 1) {\n      return state;\n    }\n\n    const newAuthorsList = [...authors];\n    const [removedAuthor] = newAuthorsList.splice(selectedIndex, 1);\n    newAuthorsList.splice(selectedIndex + 1, 0, removedAuthor);\n\n    return {\n      ...state,\n      authors: newAuthorsList,\n      selectedIndex: selectedIndex + 1,\n    };\n  },\n};\nconst reducer = (state = initialState, action) => {\n  const handler = actionHandlers[action.type];\n\n  return handler\n    ? handler(state, action)\n    : state;\n\n};\n\nexport default reducer;\n","import { createStore } from 'redux';\nimport reducer from './reducers/reducer';\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/app/App';\n\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'));\n"],"sourceRoot":""}